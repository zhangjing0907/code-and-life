看到短除法后，我们很清楚的知道，要想求出它的每一个质因数，我们需要用质数去试除。90能被2整除，那就拿
商继续除以2，除不尽就换3，一直到除到质数为止。基础代码框架类似判断质数，只是被判断的数字在过程中不断
被除，最终循环结束的时候，那个被处理过的数字，就是最后一个质因数。以下代码注释以90为例。

#include <cstdio>
#include <cmath>
#include <iostream>
int main()
{
unsigned int n;
while (std::cin >> n)
{
printf("%d =", n); //输出90 =
for (unsigned i = 2; i <= std::sqrt(n); i++)
{
while (n % i == 0 && n != i) //反复除同一个数，直到除不尽，排除刚好是该数的n次方的情况
{
printf(" %u *", i); //第一次打印 2 *,第二次打印两个 3 *
n /= i; //能整除就修改n的值
}
}
printf(" %d\n",n); //跳出后，n已经是处理过的一个质数，就是最后一个质因数：5
}
return 0;
}